# 构建阶段容器
FROM nvidia/cuda:11.4.3-cudnn8-devel-ubuntu20.04 as builder

LABEL image.authors="https://yinguobing.com"

# Disable interactive mode.
ARG DEBIAN_FRONTEND=noninteractive

# Update APT sourece
RUN sed -i 's/http:\/\/archive/http:\/\/cn.archive/' /etc/apt/sources.list && \
    rm /etc/apt/sources.list.d/*.list && apt-get update

WORKDIR /build

# 编译启用CUDA支持的FFMPEG
RUN apt-get install -y \
    build-essential curl git nasm yasm cmake libtool libc6 libc6-dev unzip \
    wget libnuma1 libnuma-dev libx264-dev libx265-dev pkg-config

ARG NV_CODEC_VERSION=sdk/11.0
RUN git clone http://git.videolan.org/git/ffmpeg/nv-codec-headers.git && \
    cd nv-codec-headers && git checkout ${NV_CODEC_VERSION} && make install && cd /build

ARG PREFIX=/build/ffmpeg-build
RUN curl -sSL https://ffmpeg.org/releases/ffmpeg-4.3.3.tar.xz | \
    tar -Jxf - -C . && cd ffmpeg-4.3.3 && \
    ./configure \
    --prefix=${PREFIX} \
    --extra-cflags=-I/usr/local/cuda/include \
    --extra-ldflags=-L/usr/local/cuda/lib64 \
    --extra-libs=-lpthread \
    --disable-static --enable-shared --disable-ffplay --disable-doc \
    --enable-cuda --enable-cuvid --enable-nvenc --enable-libx264 \
    --enable-libx265 --enable-pic --enable-gpl --enable-nonfree && \
    make -j$(nproc) && make install 

RUN \
    for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do \
    sed -i "s:${PREFIX}:/usr/local:g; s:/lib64:/lib:g" "$pc"; \
    done

# 安装至系统目录
RUN cp -r /build/ffmpeg-build/* /usr/local/ && ldconfig
