# Builder image
FROM yinguobing/ffmpeg:4.3.3-cuda_11.8.0-devel-ubuntu22.04

LABEL image.authors="https://yinguobing.com"

# Envirouments
ARG WORKDIR=/build
ARG DEBIAN_FRONTEND=noninteractive
ARG PIP_MIRROR=https://mirrors.cloud.tencent.com/pypi/simple
ARG OPENCV_SRC=/build/opencv-4.5.4
ARG OPENCV_CONTRIB=/build/opencv_contrib-4.5.4
ARG OPENCV_EXTRA_MODULES=${OPENCV_CONTRIB}/modules
ARG INSTALL_PREFIX=${WORKDIR}/opencv-install

# Install system packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    libhdf5-dev \
    libfreetype6 \
    libharfbuzz0b

# Install python packages
RUN pip3 install -i ${PIP_MIRROR} numpy==1.22.1

# Network proxy incase of slow network
# ENV HTTP_PROXY="http://172.31.96.26:1080"
# ENV HTTPS_PROXY="http://172.31.96.26:1080"

# Get OpenCV source code
RUN curl -SL http://172.31.100.101/static/opencv/opencv-4.5.4.tar.gz | \
    tar -xzf - -C .

# Get OpenCV contrib modules
RUN curl -SL http://172.31.100.101/static/opencv/opencv_contrib-4.5.4.tar.gz | \
    tar -xzf - -C .

# Download 3d-party files from a local cache
ARG OPENCV_DOWNLOAD_CACHE=/build/opencv_dependencies-4.5.4
RUN curl -SL http://172.31.100.101/static/opencv/opencv_dependencies-4.5.4.tar.gz | \
    tar -xzf - -C .

# Config the project
RUN mkdir opencv-build && cd opencv-build
RUN cmake \
    -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
    -DOPENCV_EXTRA_MODULES_PATH=${OPENCV_EXTRA_MODULES} \
    -DOPENCV_DOWNLOAD_PATH=${OPENCV_DOWNLOAD_CACHE} \
    -DWITH_CUDA=ON -DWITH_NVCUVID=ON \
    -DCUDA_ARCH_BIN=6.0,6.1,7.0,7.5,8.0,8.6 \
    -DBUILD_opencv_highgui=OFF -DWITH_GTK=OFF -DHIGHGUI_ENABLE_PLUGINS=OFF \
    ${OPENCV_SRC}

# Install OpenCV
RUN  make -j$(nproc) && make install && cp -r /build/opencv-install/* /usr/local/
